项目说明：
本项目是基于PyTorch深度学习框架实现一个使用时间卷积网络（TCN）来进行股票预测的项目，该网络可以有
效地处理时间序列数据。该网络通过堆叠因果卷积层和使用扩张卷积，能够捕捉时间序列数据中的时序依赖关系和模式。
TCN模型通常包括卷积层、非线性激活函数、池化层和全连接层，用于提取特征和生成最终的预测结果。
网络的输入是6个特征的股票数据，用前50天的六个特征数据预测下1天的股票收盘价。
【本项目的代码文件分模块整理，包含模型构建、数据划分、训练过程等模块都清晰分明】
1、引言
本项目部分参考了网上的代码，但对编程框架分解到各个py文件中形成一个完整项目的基本框架，
其他类似项目可以用这个框架进行修改，此外本人还对部分细节进行了修改，比如网络模型优化、loss计算的修改及绘图、pth文件的使用等等。
2、我的运行环境
平台：window11
语言：python3.9
编译器：Pycharm
框架：Pyorch:1.13.1
3、文件说明
train.py 里面是训练过程的通用代码，其他项目也可以在它的基础上修改
Config.py 里面是项目所需要用到的参数
DataSplit.py 实现数据划分的函数
model_TCN.py 训练的模型配置
sh300.csv 股票预测的原始数据集
sh300_test.csv 在原始基础上删掉的一列，本项目用此作为模型训练的数据集
test_stock_TCN_run.py 运行文件，配置好训练的参数，进行训练并在里面绘图
loss.csv训练过程产生的损失
loss_draw.py 根据训练输出的loss.csv文件绘制loss损失
TCN.pth 是训练过程中生成的模型参数，可用于做测试数据的预测
test_pth.py 根据生成的TCN.pth模型参数对测试数据进行预测
predict_pth.py 根据生成的TCN.pth模型参数对某50天的数据进行预测第51天的股票收盘（本项目使用sh300_test.csv前50个作为预测示例）
4、【运行说明】
在安装好pytorch的环境中，运行test_stock_TCN_run.py文件，既可开始训练，训练完成后,想再次展示loss图，可以运行loss_draw.py文件，再次展示loss变化；
此外，如果还想观察预测效果，运行test_pth.py文件，即可再次观察预测效果。还可以运行predict_pth.py对某50天的数据进行预测第51天的股票收盘数值
5、其他
接相关的编程项目，有兴趣也可以交个朋友，13076799925
